import json
import os, argparse
#
# Base path should be the path to where you are keeping most of the mutants, I.E. /research/jagodzinski/interface_mutations/full_protein/DATA/targeted_mutants
# sub_folder should be the specific subdirectory you want to look at. It should start with the PDB id and then one or more sub folders
# For example to find single indels that were done at location 100 in 1brs you would do 1brs/100
# The above example is for single indels and the base_path may change if you're looking for double indels
# Ideally though, only the sub_folder variable should be changing frequently
# Lastly there's the outpath variable which should just be an absolute path to where you want to store the PDBs. A folder should be given here, not a file name.
# Filenames for output will be autogenerated based on the name of the source json file, and they will be deposited in the outpath folder
#
def main():
    argparser = argparse.ArgumentParser()
    argparser.add_argument('pdb_id', type=str, help="pdb id of the protein. For example, 1brs")
    args = argparser.parse_args()
    pdb_id = args.pdb_id

    rootdir = f'/research/jagodzinski/interface_mutations/complete_runs/DATA/targeted_mutants/{pdb_id}' 
    outpath = f"/research/jagodzinski/interface_mutations/complete_runs/MUTANT_PDBS/{pdb_id}/"
    os.makedirs(outpath, exist_ok=True)

    for subdir, dirs, files in os.walk(rootdir):
        for name in files:
            with open(outpath+name.strip(".json")+'.pdb', 'w') as temp_pdb:
                with open(os.path.join(subdir, name), 'r') as input_file:
                    content = json.load(input_file)['pdb_data']['pdb']
                    content = content + "END"
                    #print(content)
                    temp_pdb.write(content)

if __name__ == "__main__":
    main()
